<#
Copyright (c) Microsoft and contributors.  All rights reserved.

Licensed under the Apache License, Version 2.0 (the ""License"");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at
  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.

See the License for the specific language governing permissions and
limitations under the License.

Code generated by Microsoft (R) PSSwagger 0.3.0
Changes may cause incorrect behavior and will be lost if the code is regenerated.
#>

<#
.SYNOPSIS
    Information about an external storage location.

.DESCRIPTION
    Information about an external storage location.

.PARAMETER Path
    Path to the update location

.PARAMETER UserName
    Username to access the location.

.PARAMETER Password
    Password to access the location.

.PARAMETER EncryptionKeyBase64
    Encryption key.

.PARAMETER IsBackupSchedulerEnabled
    True if the backup scheduler is enabled.

.PARAMETER AvailableCapacity
    Free space at the backup location.

.PARAMETER BackupFrequencyInMinutes
    The interval, in minutes, of backups.

.PARAMETER NextBackupTime
    The scheduled time of the next backup.

.PARAMETER LastBackupTime
    Time of backup.

#>
function New-ExternalStoreObject
{
    param(    
        [Parameter(Mandatory = $false)]
        [string]
        $Path,
    
        [Parameter(Mandatory = $false)]
        [string]
        $UserName,
    
        [Parameter(Mandatory = $false)]
        [string]
        $Password,
    
        [Parameter(Mandatory = $false)]
        [string]
        $EncryptionKeyBase64,
    
        [Parameter(Mandatory = $false)]
        [switch]
        $IsBackupSchedulerEnabled,
    
        [Parameter(Mandatory = $false)]
        [string]
        $AvailableCapacity,
    
        [Parameter(Mandatory = $false)]
        [string]
        $BackupFrequencyInMinutes,
    
        [Parameter(Mandatory = $false)]
        [string]
        $NextBackupTime,
    
        [Parameter(Mandatory = $false)]
        [string]
        $LastBackupTime
    )
    
    $Object = New-Object -TypeName Microsoft.AzureStack.Management.Backup.Admin.Models.ExternalStore

    $PSBoundParameters.GetEnumerator() | ForEach-Object { 
        if(Get-Member -InputObject $Object -Name $_.Key -MemberType Property)
        {
            $Object.$($_.Key) = $_.Value
        }
    }

    if(Get-Member -InputObject $Object -Name Validate -MemberType Method)
    {
        $Object.Validate()
    }

    return $Object
}

